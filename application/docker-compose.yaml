version: "3.8"

services: 

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      APP_PORT: 3000
      DATABASE_HOST: database
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres 
      DATABASE_NAME: postgres  
    ports: 
      - "5001:3000"
      - "127.0.0.1:9229:9229"
    networks:
      - backend

  api: 
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    environment:
      REDIS_HOST: cached
    ports:  
      - "8050:80"
    networks:
      - backend

  database:
    container_name: database
    image: postgres:15-alpine
    restart: always
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres 
    volumes: 
      - "db-data:/var/lib/postgresql/data"
    ports: 
      - "5435:5432"
    networks:
      - backend

  worker:
    build: 
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker
    networks:
      - backend
    environment:
      DATABASE_HOST: database
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres 
      DATABASE_NAME: postgres
      REDIS_HOST: cached

  cached: 
    container_name: cached
    image: redis:alpine
    networks:
      - backend         

volumes: 
   db-data:    

networks:
  backend: 
  frontend: